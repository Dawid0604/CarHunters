name: "Application"

services:
  config-service:
    image: dawid0604/carhunters-config-service
    container_name: config-service
    environment:
      - DISCOVERY_SERVICE_INSTANCE=discovery-service
    ports:
      - "8888"
    restart: unless-stopped

    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

    deploy:
      resources:
        limits:
          memory: 700m
        reservations:
          memory: 256M

    networks:
      - carhunters_network

  discovery-service:
    image: dawid0604/carhunters-discovery-service
    container_name: discovery-service
    environment:
      - CONFIG_SERVICE_INSTANCE=config-service
    ports:
      - "8761:8761"
    restart: unless-stopped
    depends_on:
      config-service:
        condition: service_healthy

    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

    deploy:
      resources:
        limits:
          memory: 700m
        reservations:
          memory: 256M

    networks:
      - carhunters_network

  user-service:
    image: dawid0604/carhunters-user-service
    container_name: user-service
    environment:
      - CONFIG_SERVICE_INSTANCE=config-service
      - DISCOVERY_SERVICE_INSTANCE=discovery-service
      - USER_MICROSERVICE_DB_HOST=user-service-postgres-db
      - USER_MICROSERVICE_POSTGRES_PORT=${USER_MICROSERVICE_POSTGRES_PORT}
      - USER_MICROSERVICE_POSTGRES_USER=${USER_MICROSERVICE_POSTGRES_USER}
      - USER_MICROSERVICE_POSTGRES_PASSWORD=${USER_MICROSERVICE_POSTGRES_PASSWORD}
      - USER_MICROSERVICE_POSTGRES_DB=${USER_MICROSERVICE_POSTGRES_DB}
    restart: unless-stopped
    depends_on:
      config-service:
        condition: service_healthy

      discovery-service:
        condition: service_healthy

    deploy:
      resources:
        limits:
          memory: 700m
        reservations:
          memory: 256M

    networks:
      - carhunters_network

  notification-service:
    image: dawid0604/carhunters-notification-service
    container_name: notification-service
    environment:
      - CONFIG_SERVICE_INSTANCE=config-service
      - DISCOVERY_SERVICE_INSTANCE=discovery-service
      - NOTIFICATION_MICROSERVICE_MONGO_DB_HOST=notification-mongo-db
      - NOTIFICATION_MICROSERVICE_MONGO_DB_USER=${NOTIFICATION_MICROSERVICE_MONGO_DB_USER}
      - NOTIFICATION_MICROSERVICE_MONGO_DB_PASSWORD=${NOTIFICATION_MICROSERVICE_MONGO_DB_PASSWORD}
      - NOTIFICATION_MICROSERVICE_MONGO_DB_PORT=${NOTIFICATION_MICROSERVICE_MONGO_DB_PORT}
      - NOTIFICATION_MICROSERVICE_MONGO_DB_DATABASE=${NOTIFICATION_MICROSERVICE_MONGO_DB_DATABASE}
      - NOTIFICATION_MICROSERVICE_MONGO_DB_AUTHENTICATION_DATABASE=${NOTIFICATION_MICROSERVICE_MONGO_DB_AUTHENTICATION_DATABASE}
      - KAFKA_SERVER=kafka

    restart: unless-stopped
    depends_on:
      discovery-service:
        condition: service_healthy

      config-service:
        condition: service_healthy

      kafka:
        condition: service_healthy

    deploy:
      resources:
        limits:
          memory: 700M
        reservations:
          memory: 256M

    networks:
      - carhunters_network

networks:
  carhunters_network:
    driver: bridge
    name: carhunters_network